volumes:
  database_data:
  prometheus:
services:
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mount the Nginx config file
    depends_on:
      - gold-price
      - rate-exchange

  front-end:
    build: ./frontend
    image: front-end/health-monitoring:1.0.0
    container_name: front-end
    expose:
      - "3000"

  gold-price:
    build: ./gold-price
    image: gold-price/gold-price-vn:1.2.1
    container_name: gold-price
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=statistic_log
      - DB_USER=postgres
      - DB_PASSWORD=ppaasssswwoorrdd
    expose:
      - "8000"
    depends_on:
      - database
    volumes:
      - ./gold-price:/app

  rate-exchange:
    build: ./rate-exchange
    image: rate-exchange/rate-exchange-vnd:1.1.0
    container_name: rate-exchange
    environment:
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=statistic_log
      - DB_USER=postgres
      - DB_PASSWORD=ppaasssswwoorrdd
    expose:
      - "8000"
    depends_on:
      - database
    volumes:
      - ./rate-exchange:/app

  database:
    image: postgres:latest
    container_name: postgres_database
    user: postgres
    environment:
      - POSTGRES_PASSWORD=ppaasssswwoorrdd
    expose:
      - "5432"
    volumes:
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init_postgres.sql
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 30s
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus:/prometheus
    ports:
      - 9090:9090
    command: 
      - --config.file=/etc/prometheus/prometheus.yml
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - cadvisor
      - node_exporter
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=10", "http://localhost:9090"]
      start_period: 10s
      timeout: 10s
      retries: 5
      interval: 30s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      # - /dev/disk/:/dev/disk:ro
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "wget", "--spider", "--timeout=10", "http://localhost:8080"]
      start_period: 10s
      timeout: 10s
      retries: 5
      interval: 30s

#TODO: where and how to save historical data for retrieve at times when servers supposed to down
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: root
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    command:
      - "grafana cli plugins install marcusolsson-json-datasource"
      - --config=/etc/grafana/grafana.ini
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      start_period: 10s
      timeout: 10s
      retries: 5
      interval: 30s

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - ./node-exporter:/etc/nodeexporter
    command: 
      - '--path.rootfs=/etc/nodeexporter'
    expose:
      - 9100:9100
